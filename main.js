!function(){"use strict";const e=[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],t={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},s=document.querySelector("#add-card-form"),i=document.querySelector("#edit-profile-form"),r=i.querySelector(".modal__input_type_name"),n=i.querySelector(".modal__input_type_descripion"),o=document.querySelector(".profile__edit-button"),l=document.querySelector(".profile__add-button");function a(e,t,s){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var i=s.call(e,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class d{constructor(e){this._popupElement=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}_handleEscClose(e){"Escape"===e.key&&this.close()}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal_opened")||e.target.classList.contains("modal__exit-button"))&&this.close()}))}}class c extends d{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super(t),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=s,this._inputList=this._popupForm.querySelectorAll(".modal__input")}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}close(){super.close(),this._popupForm.reset()}}var _=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}_setEventListeners(){this._inputElements=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputElements.forEach((e=>{e.addEventListener("input",(t=>{this.checkInputValidity(e),this.toggleButtonState()}))}))}checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_showInputError(e){this._errorMessageEl=this._form.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this._errorMessageEl.textContent=e.validationMessage,this._errorMessageEl.classList.add(this._errorClass)}_hideInputError(e){this._errorMessageEl=this._form.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this._errorMessageEl.textContent="",this._errorMessageEl.classList.remove(this._errorClass)}toggleButtonState(){this._hasInvalidInput()?this._disableButton():this._enableButton()}resetValidation(){this.toggleButtonState(),this._inputElements.forEach((e=>{this._hideInputError(e)}))}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}_disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}};const u=new class extends d{constructor(e){super(e),this._modalImage=this._popupElement.querySelector(".modal__image"),this._modalText=this._popupElement.querySelector(".modal__caption")}open(e){this._modalImage.src=e.link,this._modalImage.alt=`Image ${e.link}`,this._modalText.textContent=e.name,super.open()}}("#image-modal"),m=new class{constructor(e,t){let{items:s,renderer:i}=e;this._renderedItems=s,this._renderer=i,this._container=document.querySelector(t)}renderItems(){this._renderedItems.forEach(this._renderer)}addItem(e){this._container.append(e)}prependItem(e){this._container.prepend(e)}}({items:e,renderer:e=>{const t=E(e);m.addItem(t)}},".cards__list"),h=new class{constructor(e){let{userName:t,userJob:s}=e;this._profileName=document.querySelector(t),this._profileJob=document.querySelector(s)}getUserInfo(){return{name:this._profileName.textContent,job:this._profileJob.textContent}}setUserInfo(e){let{profileName:t,profileJob:s}=e;this._profileName.textContent=t,this._profileJob.textContent=s}}({userName:".profile__title",userJob:".profile__description"}),p=new c({popupSelector:"#edit-modal",handleFormSubmit:e=>{h.setUserInfo({profileName:e.title,profileJob:e.description}),p.close()}}),E=e=>new class{constructor(e,t){let{data:s,toggleImageClick:i}=e;a(this,"_toggleCardLike",(()=>{this._cardLikeBtn.classList.toggle("card__like-button_active")})),a(this,"_toggleCardDelete",(()=>{this._cardElement.remove()})),this._name=s.name,this._link=s.link,this._toggleImageClick=i,this._cardSelector=t}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardElement=this._getTemplate(),this._setEventListeners(),this._imageEl.src=this._link,this._imageEl.alt=this._name,this._cardElement.querySelector(".card__title").textContent=this._name,this._cardElement}_setEventListeners(){this._cardLikeBtn=this._cardElement.querySelector(".card__like-button"),this._cardLikeBtn.addEventListener("click",(()=>this._toggleCardLike())),this._cardDeleteBtn=this._cardElement.querySelector(".card__delete-button"),this._cardDeleteBtn.addEventListener("click",(()=>this._toggleCardDelete())),this._imageEl=this._cardElement.querySelector(".card__image"),this._imageEl.addEventListener("click",(()=>this._toggleImageClick({name:this._name,link:this._link})))}}({data:e,toggleImageClick:e=>{u.open(e)}},"#card-template").getView(),g=new c({popupSelector:"#add-modal",handleFormSubmit:e=>{!function(e){const t=E(e);m.prependItem(t)}({name:e.title,link:e.link}),g.close()}}),b=new _(t,i),v=new _(t,s);m.renderItems(e),u.setEventListeners(),p.setEventListeners(),g.setEventListeners(),b.enableValidation(),v.enableValidation(),o.addEventListener("click",(()=>{!function(){const{name:e,job:t}=h.getUserInfo();r.value=e,n.value=t}(),p.open(),b.resetValidation()})),l.addEventListener("click",(()=>{g.open(),v.resetValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,